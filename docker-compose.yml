services:
  pg:
    image: postgres:14.17
    restart: always
    env_file: .env
    environment:
      POSTGRES_DB: ${PG_DB}
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASS}
    volumes:
      - pgdata:/var/local/postgresql/data
      # - ./initdb:/docker-entrypoint-initdb.d/ # this is for initializing the database beforehand
    ports:
      - ${PG_PORT}:${PG_PORT}
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${PG_USER}"]
      interval: 5s
      timeout: 3s
      retries: 5
  pgadmin:
    image: dpage/pgadmin4
    env_file: .env
    ports:
      - ${PGADMIN_PORT}:80
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - pgadmin-data:/var/lib/pgadmin
  
  app:
    build: .
    env_file: .env
    command: /bin/sh -c "python manage.py makemigrations && python manage.py migrate && daphne -p 3000 -b 0.0.0.0 mil_product_server.asgi:application"
    ports:
      - ${APP_PORT}:${APP_PORT}
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      pg:
        condition: service_healthy
volumes:
  pgdata:
  pgadmin-data:
      
      